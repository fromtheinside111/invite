import telebot
import sqlite3
from datetime import datetime

bot = telebot.TeleBot('7313879608:AAFgL1bJxl-KftmioFK6KtR37v5-sOPfpOE')
ADMIN_ID = 7153648951

db = sqlite3.connect('base.db', check_same_thread=False)
sql = db.cursor()

sql.execute('''
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    answer TEXT,
    answer2 TEXT,
    answer3 TEXT,
    username TEXT,
    status INTEGER
)
''')
db.commit()

chat = []

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton(text='üì© –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É', callback_data='application'))
    bot.send_message(message.chat.id,
                     'üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <u>Raspberry Team</u>!</b>\n\n'
                     'üöÄ <b>–ú—ã –∫–æ–º–∞–Ω–¥–∞ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã—Ö –ª—é–¥–µ–π, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏—Ö –æ–Ω–ª–∞–π–Ω.</b>\n\n'
                     'üìù <b>–ü–æ–¥–∞–π –∑–∞—è–≤–∫—É, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.</b>\n\n'
                     'üëá –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá',
                     parse_mode='HTML', reply_markup=keyboard)

    sql.execute('SELECT * FROM users WHERE user_id = ?', (message.chat.id,))
    if sql.fetchone() is None:
        sql.execute('INSERT INTO users VALUES (NULL, ?, ?, ?, ?, ?, ?)',
                    (message.chat.id, 'none', 'none', 'none', message.from_user.username, 0))
        db.commit()

@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if message.chat.id != ADMIN_ID:
        return

    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(
        telebot.types.InlineKeyboardButton(text='‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ—Ö', callback_data='approve_all'),
        telebot.types.InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å–µ—Ö', callback_data='reject_all')
    )

    sql.execute('SELECT * FROM users WHERE status = 1')  # 1 = –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏
    pending_users = sql.fetchall()

    if not pending_users:
        bot.send_message(message.chat.id, "üì≠ –ù–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏.")
        return

    text = 'üìã <b>–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏:</b>\n\n'
    for user in pending_users:
        text += f'üÜî <code>{user[1]}</code> | @{user[5]}\nüîπ {user[2]} | {user[3]} | {user[4]}\n\n'

    bot.send_message(message.chat.id, text, parse_mode='HTML', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def question(call):
    if call.data == 'application':
        sql.execute('SELECT * FROM users WHERE user_id = ?', (call.message.chat.id,))
        ans = sql.fetchone()
        status = ans[6]
        if status == 0:
            msg = bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="üß† <b>–ê–Ω–∫–µ—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞:</b>\n\n"
                     "1Ô∏è‚É£ <b>–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?</b>",
                parse_mode='HTML'
            )
            bot.register_next_step_handler(msg, question2)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="‚ùó <b>–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É.</b>", parse_mode='HTML')

    elif call.data == 'sent':
        sql.execute('UPDATE users SET status = 1 WHERE user_id = ?', (call.message.chat.id,))
        db.commit()
        if call.message.chat.id not in chat:
            chat.append(call.message.chat.id)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="‚úÖ <b>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!</b>", parse_mode='HTML')

        sql.execute('SELECT * FROM users WHERE user_id = ?', (call.message.chat.id,))
        anss = sql.fetchone()
        ans1, ans2, ans3, username = anss[2], anss[3], anss[4], anss[5]
        key = telebot.types.InlineKeyboardMarkup()
        key.add(
            telebot.types.InlineKeyboardButton(text='‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data='accepted'),
            telebot.types.InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='reject')
        )
        bot.send_message(ADMIN_ID,
                         f'üì• <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{username}</b>\n\n'
                         f'üóì <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {ans1}\n'
                         f'‚è∞ <b>–í—Ä–µ–º—è –¥–ª—è —Ä–∞–±–æ—Ç—ã:</b> {ans2}\n'
                         f'üìà <b>–û–ø—ã—Ç:</b> {ans3}',
                         parse_mode='HTML', reply_markup=key)

    elif call.data == 'accepted':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="‚úÖ <b>–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞—è–≤–∫—É!</b>", parse_mode='HTML')
        msm = chat[0]
        bot.send_message(msm, 'üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–Ω—è—Ç—ã –≤ –∫–æ–º–∞–Ω–¥—É.</b>', parse_mode='HTML')
        sql.execute('UPDATE users SET status = 2 WHERE user_id = ?', (msm,))
        db.commit()
        del chat[0]

    elif call.data == 'reject':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="‚ùå <b>–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É.</b>", parse_mode='HTML')
        msm = chat[0]
        bot.send_message(msm, 'üòû <b>–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç–µ.</b>', parse_mode='HTML')
        sql.execute('UPDATE users SET status = -1 WHERE user_id = ?', (msm,))
        db.commit()
        del chat[0]

    elif call.data == 'approve_all' and call.message.chat.id == ADMIN_ID:
        sql.execute('SELECT user_id FROM users WHERE status = 1')
        users = sql.fetchall()
        for user in users:
            uid = user[0]
            sql.execute('UPDATE users SET status = 2 WHERE user_id = ?', (uid,))
            bot.send_message(uid, 'üéâ <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å.</b>', parse_mode='HTML')
        db.commit()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ –±—ã–ª–∏ –æ–¥–æ–±—Ä–µ–Ω—ã.", parse_mode='HTML')

    elif call.data == 'reject_all' and call.message.chat.id == ADMIN_ID:
        sql.execute('SELECT user_id FROM users WHERE status = 1')
        users = sql.fetchall()
        for user in users:
            uid = user[0]
            sql.execute('UPDATE users SET status = -1 WHERE user_id = ?', (uid,))
            bot.send_message(uid, '‚ùå <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.</b>', parse_mode='HTML')
        db.commit()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="‚ùå –í—Å–µ –∑–∞—è–≤–∫–∏ –±—ã–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã.", parse_mode='HTML')

def question2(message):
    question1 = message.text
    sql.execute('UPDATE users SET answer = ? WHERE user_id = ?', (question1, message.chat.id))
    db.commit()
    msg = bot.send_message(message.chat.id, "2Ô∏è‚É£ <b>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤ —É–¥–µ–ª—è—Ç—å —Ä–∞–±–æ—Ç–µ?</b>", parse_mode='HTML')
    bot.register_next_step_handler(msg, question3)

def question3(message):
    question2 = message.text
    sql.execute('UPDATE users SET answer2 = ? WHERE user_id = ?', (question2, message.chat.id))
    db.commit()
    msg = bot.send_message(message.chat.id, "3Ô∏è‚É£ <b>–ë—ã–ª –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –≤ –ø–æ—Ö–æ–∂–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö?</b>", parse_mode='HTML')
    bot.register_next_step_handler(msg, finish)

def finish(message):
    keyboards = telebot.types.InlineKeyboardMarkup()
    keyboards.add(
        telebot.types.InlineKeyboardButton(text='üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='sent'),
        telebot.types.InlineKeyboardButton(text='üîÅ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data='application')
    )
    question3 = message.text
    sql.execute('UPDATE users SET answer3 = ? WHERE user_id = ?', (question3, message.chat.id))
    db.commit()
    sql.execute('SELECT * FROM users WHERE user_id = ?', (message.chat.id,))
    ans = sql.fetchone()
    bot.send_message(message.chat.id,
                     f'üìù <b>–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã:</b>\n\n'
                     f'1Ô∏è‚É£ {ans[2]}\n'
                     f'2Ô∏è‚É£ {ans[3]}\n'
                     f'3Ô∏è‚É£ {ans[4]}',
                     parse_mode='HTML', reply_markup=keyboards)

bot.polling()
